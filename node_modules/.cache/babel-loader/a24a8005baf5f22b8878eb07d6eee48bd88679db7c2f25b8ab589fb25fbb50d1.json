{"ast":null,"code":"var _jsxFileName = \"/Users/anantamanoranjan/Desktop/demo/pdf-toc-extractor/src/ResultPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResultPage.css';\nimport logo from './assets/sonar-logo.png';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPage = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState(null);\n  const [sector, setSector] = useState('');\n  const [relevantSentences, setRelevantSentences] = useState([]);\n  const [querySubmitted, setQuerySubmitted] = useState(false);\n  const file = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.file;\n  useEffect(() => {\n    const uploadFile = async () => {\n      if (!file) return;\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setResult(response.data);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setResult('An error occurred while processing the file.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    uploadFile();\n  }, [file]);\n  const handleGoBack = () => {\n    navigate('/');\n  };\n  const handleSectorSubmit = async () => {\n    if (!sector) return;\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/relevant_sentences', {\n        query: sector,\n        sentences: result.Sentences\n      });\n      setRelevantSentences(response.data.relevant_sentences);\n      setQuerySubmitted(true);\n    } catch (error) {\n      console.error('Error fetching relevant sentences:', error);\n    }\n  };\n  const formatResult = data => {\n    let formattedResult = [];\n    if (data[\"TOC Pages\"]) {\n      formattedResult.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Table of Contents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[\"TOC Pages\"].replace(/Page\\s+/g, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, \"toc\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this));\n    }\n    if (data[\"Sections\"]) {\n      formattedResult = formattedResult.concat(Object.entries(data[\"Sections\"]).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value.replace(/Page\\s+/g, '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)));\n    }\n    return formattedResult;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-page\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Sonar Logo\",\n        className: \"loading-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-text\",\n        children: \"is analyzing your file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"result-title\",\n        children: file === null || file === void 0 ? void 0 : file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"result-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Section Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: result && formatResult(result)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), !querySubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sector-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Which sector do you work in?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sector,\n          onChange: e => setSector(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSectorSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), querySubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relevant-sentences-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Relevant Sentences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: relevantSentences.map(([sentence, score], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Score: \", score.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 41\n            }, this), \" - \", sentence]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleGoBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultPage, \"8Koe9WcQ8G10AeutxsNjA21qg6c=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","logo","useLocation","useNavigate","jsxDEV","_jsxDEV","ResultPage","_s","_location$state","location","navigate","loading","setLoading","result","setResult","sector","setSector","relevantSentences","setRelevantSentences","querySubmitted","setQuerySubmitted","file","state","uploadFile","formData","FormData","append","response","post","headers","data","error","console","handleGoBack","handleSectorSubmit","query","sentences","Sentences","relevant_sentences","formatResult","formattedResult","push","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","concat","Object","entries","map","key","value","className","src","alt","name","type","onChange","e","target","onClick","sentence","score","index","toFixed","_c","$RefreshReg$"],"sources":["/Users/anantamanoranjan/Desktop/demo/pdf-toc-extractor/src/ResultPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResultPage.css';\nimport logo from './assets/sonar-logo.png';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst ResultPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(true);\n    const [result, setResult] = useState(null);\n    const [sector, setSector] = useState('');\n    const [relevantSentences, setRelevantSentences] = useState([]);\n    const [querySubmitted, setQuerySubmitted] = useState(false);\n    const file = location.state?.file;\n\n    useEffect(() => {\n        const uploadFile = async () => {\n            if (!file) return;\n\n            const formData = new FormData();\n            formData.append('file', file);\n\n            try {\n                const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n                setResult(response.data);\n            } catch (error) {\n                console.error('Error uploading file:', error);\n                setResult('An error occurred while processing the file.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        uploadFile();\n    }, [file]);\n\n    const handleGoBack = () => {\n        navigate('/');\n    };\n\n    const handleSectorSubmit = async () => {\n        if (!sector) return;\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/relevant_sentences', {\n                query: sector,\n                sentences: result.Sentences\n            });\n            setRelevantSentences(response.data.relevant_sentences);\n            setQuerySubmitted(true);\n        } catch (error) {\n            console.error('Error fetching relevant sentences:', error);\n        }\n    };\n\n    const formatResult = (data) => {\n        let formattedResult = [];\n        if (data[\"TOC Pages\"]) {\n            formattedResult.push(\n                <tr key=\"toc\">\n                    <td>Table of Contents</td>\n                    <td>{data[\"TOC Pages\"].replace(/Page\\s+/g, '')}</td>\n                </tr>\n            );\n        }\n        if (data[\"Sections\"]) {\n            formattedResult = formattedResult.concat(\n                Object.entries(data[\"Sections\"]).map(([key, value]) => (\n                    <tr key={key}>\n                        <td>{key}</td>\n                        <td>{value.replace(/Page\\s+/g, '')}</td>\n                    </tr>\n                ))\n            );\n        }\n        return formattedResult;\n    };\n\n    return (\n        <div className=\"result-page\">\n            {loading ? (\n                <div className=\"loading-screen\">\n                    <img src={logo} alt=\"Sonar Logo\" className=\"loading-logo\" />\n                    <p className=\"loading-text\">is analyzing your file</p>\n                </div>\n            ) : (\n                <div className=\"result-container fade-in\">\n                    <h2 className=\"result-title\">{file?.name}</h2>\n                    <table className=\"result-table\">\n                        <thead>\n                            <tr>\n                                <th>Section Name</th>\n                                <th>Pages</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {result && formatResult(result)}\n                        </tbody>\n                    </table>\n                    {!querySubmitted && (\n                        <div className=\"sector-input-container\">\n                            <p>Which sector do you work in?</p>\n                            <input\n                                type=\"text\"\n                                value={sector}\n                                onChange={(e) => setSector(e.target.value)}\n                            />\n                            <button onClick={handleSectorSubmit}>Submit</button>\n                        </div>\n                    )}\n                    {querySubmitted && (\n                        <div className=\"relevant-sentences-container\">\n                            <h2>Relevant Sentences</h2>\n                            <ul>\n                                {relevantSentences.map(([sentence, score], index) => (\n                                    <li key={index}>\n                                        <strong>Score: {score.toFixed(4)}</strong> - {sentence}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    )}\n                    <button className=\"back-button\" onClick={handleGoBack}>Back</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ResultPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}